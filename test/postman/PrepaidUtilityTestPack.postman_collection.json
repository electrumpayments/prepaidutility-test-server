{
	"variables": [],
	"info": {
		"name": "Prepaid Utility Test Pack",
		"_postman_id": "f12a629f-4c8e-e6d9-d8e3-f08c1a30e179",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Fault reports",
			"description": "",
			"item": [
				{
					"name": "FaultReport",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Reference present\"] = jsonData.reference !== null;",
									"tests[\"Description present\"] = jsonData.description  !== null;",
									"",
									"tests[\"Correct id returned\"] = jsonData.id === environment.requestId;",
									"tests[\"Correct time returned\"] = jsonData.time === environment.reqDateTime;",
									"",
									"var originator = jsonData.originator;",
									"tests[\"Originator present\"] = originator !== null;",
									"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
									"tests[\"Originator Institution present\"] = originator.institution !== null;",
									"tests[\"Originator terminal echoed\"] = originator.terminalId === environment.terminalId;",
									"",
									"var merchant = originator.merchant;",
									"tests[\"Merchant ID echoed\"] = merchant.merchantId === environment.merchantId;",
									"tests[\"Merchant type echoed\"] = merchant.merchantType === environment.merchantType;",
									"tests[\"Merchant name present\"] = merchant.merchantName !== null;",
									"",
									"var merchantName = merchant.merchantName;",
									"tests[\"Merchant Name echoed\"] = merchantName.name === environment.merchantName;",
									"tests[\"Merchant City echoed\"] = merchantName.city === environment.merchantCity;",
									"tests[\"Merchant Region echoed\"] = merchantName.region === environment.merchantRegion;",
									"tests[\"Merchant Country echoed\"] = merchantName.country === environment.merchantCountry;",
									"",
									"var originatorInst = originator.institution;",
									"tests[\"Originator institution present\"] = originatorInst !== null;",
									"tests[\"Originator institution ID echoed\"] = originatorInst.id === environment.originatorInstId;",
									"tests[\"Originator institution name echoed\"] = originatorInst.name === environment.originatorInstName;",
									"",
									"var client = jsonData.client;",
									"tests[\"Client institution present\"] = client !== null;",
									"tests[\"Client institution ID present\"] = client.id !== null;",
									"tests[\"Client institution name present\"] = client.name !== null;",
									"",
									"var settlementEntity = jsonData.settlementEntity;",
									"tests[\"Settlement Entity institution present\"] = settlementEntity !== null;",
									"tests[\"Settlement Entity institution ID present\"] = settlementEntity.id !== null;",
									"tests[\"Settlement Entity institution name present\"] = settlementEntity.name !== null;",
									"",
									"var receiver = jsonData.receiver;",
									"tests[\"Receiver institution present\"] = receiver !== null;",
									"tests[\"Receiver institution ID present\"] = receiver.id !== null;",
									"tests[\"Receiver institution name present\"] = receiver.name !== null;",
									"",
									"var thirdPartyIndentifiers = jsonData.thirdPartyIndentifiers;",
									"tests[\"Third Party Indentifiers present\"] = thirdPartyIndentifiers !== null;"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"function _p8(s) {",
									"        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
									"        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
									"    }",
									"",
									"function uuid() {",
									"    ",
									"    return _p8() + _p8(true) + _p8(true) + _p8();",
									"}",
									"",
									"var dateTime = new Date().toISOString();",
									"postman.setEnvironmentVariable(\"reqDateTime\", dateTime);",
									"",
									"postman.setEnvironmentVariable(\"requestId\",uuid());",
									"postman.setEnvironmentVariable(\"originatorTranRef\",_p8());",
									"postman.setEnvironmentVariable(\"clientTranRef\",_p8());",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/faultReports/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"meter\": {\n    \t\"meterId\": \"{{keychangeMeterId}}\"\n    },\n    \"faultType\": \"KeepsTripping\",\n    \"contactNumber\": \"082134567\",\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Key change requests",
			"description": "",
			"item": [
				{
					"name": "KeyChangeTokenRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Meter present\"] = jsonData.meter !== null;",
									"tests[\"Tokens present\"] = jsonData.tokens  !== null;",
									"",
									"tests[\"Correct id returned\"] = jsonData.id === environment.requestId;",
									"tests[\"Correct time returned\"] = jsonData.time === environment.reqDateTime;",
									"",
									"var originator = jsonData.originator;",
									"tests[\"Originator present\"] = originator !== null;",
									"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
									"tests[\"Originator Institution present\"] = originator.institution !== null;",
									"tests[\"Originator terminal echoed\"] = originator.terminalId === environment.terminalId;",
									"",
									"var merchant = originator.merchant;",
									"tests[\"Merchant ID echoed\"] = merchant.merchantId === environment.merchantId;",
									"tests[\"Merchant type echoed\"] = merchant.merchantType === environment.merchantType;",
									"tests[\"Merchant name present\"] = merchant.merchantName !== null;",
									"",
									"var merchantName = merchant.merchantName;",
									"tests[\"Merchant Name echoed\"] = merchantName.name === environment.merchantName;",
									"tests[\"Merchant City echoed\"] = merchantName.city === environment.merchantCity;",
									"tests[\"Merchant Region echoed\"] = merchantName.region === environment.merchantRegion;",
									"tests[\"Merchant Country echoed\"] = merchantName.country === environment.merchantCountry;",
									"",
									"var originatorInst = originator.institution;",
									"tests[\"Originator institution present\"] = originatorInst !== null;",
									"tests[\"Originator institution ID echoed\"] = originatorInst.id === environment.originatorInstId;",
									"tests[\"Originator institution name echoed\"] = originatorInst.name === environment.originatorInstName;",
									"",
									"var client = jsonData.client;",
									"tests[\"Client institution present\"] = client !== null;",
									"tests[\"Client institution ID present\"] = client.id !== null;",
									"tests[\"Client institution name present\"] = client.name !== null;",
									"",
									"var settlementEntity = jsonData.settlementEntity;",
									"tests[\"Settlement Entity institution present\"] = settlementEntity !== null;",
									"tests[\"Settlement Entity institution ID present\"] = settlementEntity.id !== null;",
									"tests[\"Settlement Entity institution name present\"] = settlementEntity.name !== null;",
									"",
									"var receiver = jsonData.receiver;",
									"tests[\"Receiver institution present\"] = receiver !== null;",
									"tests[\"Receiver institution ID present\"] = receiver.id !== null;",
									"tests[\"Receiver institution name present\"] = receiver.name !== null;",
									"",
									"var thirdPartyIndentifiers = jsonData.thirdPartyIndentifiers;",
									"tests[\"Third Party Indentifiers present\"] = thirdPartyIndentifiers !== null;"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"function _p8(s) {",
									"        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
									"        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
									"    }",
									"",
									"function uuid() {",
									"    ",
									"    return _p8() + _p8(true) + _p8(true) + _p8();",
									"}",
									"",
									"var dateTime = new Date().toISOString();",
									"postman.setEnvironmentVariable(\"reqDateTime\", dateTime);",
									"",
									"postman.setEnvironmentVariable(\"requestId\",uuid());",
									"postman.setEnvironmentVariable(\"originatorTranRef\",_p8());",
									"postman.setEnvironmentVariable(\"clientTranRef\",_p8());",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/keyChangeTokenRequests/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"meter\": {\n    \t\"meterId\": \"{{keychangeMeterId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Lookup-purchase-confirm",
			"description": "",
			"item": [
				{
					"name": "1_MeterLookupRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var meter = jsonData.meter",
									"tests[\"Meter present\"] = meter !== null;",
									"",
									"tests[\"Correct id returned\"] = jsonData.id === environment.requestId;",
									"tests[\"Correct time returned\"] = jsonData.time === environment.reqDateTime;",
									"",
									"var originator = jsonData.originator;",
									"tests[\"Originator present\"] = originator !== null;",
									"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
									"tests[\"Originator Institution present\"] = originator.institution !== null;",
									"tests[\"Originator terminal echoed\"] = originator.terminalId === environment.terminalId;",
									"",
									"var merchant = originator.merchant;",
									"tests[\"Merchant ID echoed\"] = merchant.merchantId === environment.merchantId;",
									"tests[\"Merchant type echoed\"] = merchant.merchantType === environment.merchantType;",
									"tests[\"Merchant name present\"] = merchant.merchantName !== null;",
									"",
									"var merchantName = merchant.merchantName;",
									"tests[\"Merchant Name echoed\"] = merchantName.name === environment.merchantName;",
									"tests[\"Merchant City echoed\"] = merchantName.city === environment.merchantCity;",
									"tests[\"Merchant Region echoed\"] = merchantName.region === environment.merchantRegion;",
									"tests[\"Merchant Country echoed\"] = merchantName.country === environment.merchantCountry;",
									"",
									"var originatorInst = originator.institution;",
									"tests[\"Originator institution present\"] = originatorInst !== null;",
									"tests[\"Originator institution ID echoed\"] = originatorInst.id === environment.originatorInstId;",
									"tests[\"Originator institution name echoed\"] = originatorInst.name === environment.originatorInstName;",
									"",
									"var client = jsonData.client;",
									"tests[\"Client institution present\"] = client !== null;",
									"tests[\"Client institution ID present\"] = client.id !== null;",
									"tests[\"Client institution name present\"] = client.name !== null;",
									"",
									"var settlementEntity = jsonData.settlementEntity;",
									"tests[\"Settlement Entity institution present\"] = settlementEntity !== null;",
									"tests[\"Settlement Entity institution ID present\"] = settlementEntity.id !== null;",
									"tests[\"Settlement Entity institution name present\"] = settlementEntity.name !== null;",
									"",
									"var receiver = jsonData.receiver;",
									"tests[\"Receiver institution present\"] = receiver !== null;",
									"tests[\"Receiver institution ID present\"] = receiver.id !== null;",
									"tests[\"Receiver institution name present\"] = receiver.name !== null;",
									"",
									"var thirdPartyIndentifiers = jsonData.thirdPartyIndentifiers;",
									"tests[\"Third Party Indentifiers present\"] = thirdPartyIndentifiers !== null;",
									"",
									"postman.setEnvironmentVariable(\"requestAmount\", jsonData.minAmount.amount);",
									"",
									"postman.setNextRequest(\"2_PurchaseRequest\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"function _p8(s) {",
									"        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
									"        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
									"    }",
									"",
									"function uuid() {",
									"    ",
									"    return _p8() + _p8(true) + _p8(true) + _p8();",
									"}",
									"",
									"var dateTime = new Date().toISOString();",
									"postman.setEnvironmentVariable(\"reqDateTime\", dateTime);",
									"",
									"postman.setEnvironmentVariable(\"requestId\",uuid());",
									"postman.setEnvironmentVariable(\"originatorTranRef\",_p8());",
									"postman.setEnvironmentVariable(\"clientTranRef\",_p8());",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/meterLookups/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"meter\": {\n    \t\"meterId\": \"{{meterId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "2_PurchaseRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var meter = jsonData.meter",
									"tests[\"Meter present\"] = meter !== null;",
									"",
									"tests[\"Customer present\"] = jsonData.customer !== null;",
									"tests[\"Utility present\"] = jsonData.utility !== null;",
									"tests[\"Tokens present\"] = jsonData.tokens !== null;",
									"",
									"tests[\"Correct id returned\"] = jsonData.id === environment.requestId;",
									"tests[\"Correct time returned\"] = jsonData.time === environment.reqDateTime;",
									"",
									"var originator = jsonData.originator;",
									"tests[\"Originator present\"] = originator !== null;",
									"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
									"tests[\"Originator Institution present\"] = originator.institution !== null;",
									"tests[\"Originator terminal echoed\"] = originator.terminalId === environment.terminalId;",
									"",
									"var merchant = originator.merchant;",
									"tests[\"Merchant ID echoed\"] = merchant.merchantId === environment.merchantId;",
									"tests[\"Merchant type echoed\"] = merchant.merchantType === environment.merchantType;",
									"tests[\"Merchant name present\"] = merchant.merchantName !== null;",
									"",
									"var merchantName = merchant.merchantName;",
									"tests[\"Merchant Name echoed\"] = merchantName.name === environment.merchantName;",
									"tests[\"Merchant City echoed\"] = merchantName.city === environment.merchantCity;",
									"tests[\"Merchant Region echoed\"] = merchantName.region === environment.merchantRegion;",
									"tests[\"Merchant Country echoed\"] = merchantName.country === environment.merchantCountry;",
									"",
									"var originatorInst = originator.institution;",
									"tests[\"Originator institution present\"] = originatorInst !== null;",
									"tests[\"Originator institution ID echoed\"] = originatorInst.id === environment.originatorInstId;",
									"tests[\"Originator institution name echoed\"] = originatorInst.name === environment.originatorInstName;",
									"",
									"var client = jsonData.client;",
									"tests[\"Client institution present\"] = client !== null;",
									"tests[\"Client institution ID present\"] = client.id !== null;",
									"tests[\"Client institution name present\"] = client.name !== null;",
									"",
									"var settlementEntity = jsonData.settlementEntity;",
									"tests[\"Settlement Entity institution present\"] = settlementEntity !== null;",
									"tests[\"Settlement Entity institution ID present\"] = settlementEntity.id !== null;",
									"tests[\"Settlement Entity institution name present\"] = settlementEntity.name !== null;",
									"",
									"var receiver = jsonData.receiver;",
									"tests[\"Receiver institution present\"] = receiver !== null;",
									"tests[\"Receiver institution ID present\"] = receiver.id !== null;",
									"tests[\"Receiver institution name present\"] = receiver.name !== null;",
									"",
									"var thirdPartyIndentifiers = jsonData.thirdPartyIndentifiers;",
									"tests[\"Third Party Indentifiers present\"] = thirdPartyIndentifiers !== null;",
									"",
									"postman.setEnvironmentVariable(\"thirdPartyId1\", jsonData.thirdPartyIdentifiers[0].institutionId);",
									"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", jsonData.thirdPartyIdentifiers[0].transactionIdentifier);",
									"",
									"postman.setEnvironmentVariable(\"thirdPartyId2\", jsonData.thirdPartyIdentifiers[1].institutionId);",
									"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", jsonData.thirdPartyIdentifiers[1].transactionIdentifier);",
									"",
									"postman.setNextRequest(\"3_ConfirmationAdvice\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"function _p8(s) {",
									"        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
									"        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
									"    }",
									"",
									"function uuid() {",
									"    ",
									"    return _p8() + _p8(true) + _p8(true) + _p8();",
									"}",
									"",
									"var dateTime = new Date().toISOString();",
									"postman.setEnvironmentVariable(\"reqDateTime\", dateTime);",
									"",
									"postman.setEnvironmentVariable(\"requestId\",uuid());",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/tokenPurchases/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"purchaseAmount\": {\n\t\t\"amount\": \"{{requestAmount}}\",\n\t\t\"currency\": \"{{currency}}\"\n\t},\n    \"meter\": {\n    \t\"meterId\": \"{{meterId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "3_ConfirmationAdvice",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 202\"] = responseCode.code === 202;"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"function _p8(s) {",
									"        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
									"        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
									"    }",
									"",
									"function uuid() {",
									"    ",
									"    return _p8() + _p8(true) + _p8(true) + _p8();",
									"}",
									"",
									"var dateTime = new Date().toISOString();",
									"postman.setEnvironmentVariable(\"adviceDateTime\", dateTime);",
									"",
									"postman.setEnvironmentVariable(\"confirmationId\",uuid());",
									"postman.setEnvironmentVariable(\"tenderAmount\",environment.requestAmount);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/tokenPurchases/{{requestId}}/confirmations/{{confirmationId}}",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\" : \"{{confirmationId}}\",\n  \"requestId\" : \"{{requestId}}\",\n  \"time\" : \"{{adviceDateTime}}\",\n  \"tenders\" : [ {\n    \"accountType\" : \"{{tenderAccountType}}\",\n    \"amount\" : {\n      \"amount\" : {{tenderAmount}},\n      \"currency\" : \"{{currency}}\"\n    },\n    \"cardNumber\" : \"{{tenderCardNumber}}\",\n    \"tenderType\" : \"{{tenderTypeCard}}\"\n  } \n  ],\n  \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Lookup-purchase-reverse",
			"description": "",
			"item": [
				{
					"name": "1_MeterLookupRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var meter = jsonData.meter",
									"tests[\"Meter present\"] = meter !== null;",
									"",
									"tests[\"Correct id returned\"] = jsonData.id === environment.requestId;",
									"tests[\"Correct time returned\"] = jsonData.time === environment.reqDateTime;",
									"",
									"var originator = jsonData.originator;",
									"tests[\"Originator present\"] = originator !== null;",
									"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
									"tests[\"Originator Institution present\"] = originator.institution !== null;",
									"tests[\"Originator terminal echoed\"] = originator.terminalId === environment.terminalId;",
									"",
									"var merchant = originator.merchant;",
									"tests[\"Merchant ID echoed\"] = merchant.merchantId === environment.merchantId;",
									"tests[\"Merchant type echoed\"] = merchant.merchantType === environment.merchantType;",
									"tests[\"Merchant name present\"] = merchant.merchantName !== null;",
									"",
									"var merchantName = merchant.merchantName;",
									"tests[\"Merchant Name echoed\"] = merchantName.name === environment.merchantName;",
									"tests[\"Merchant City echoed\"] = merchantName.city === environment.merchantCity;",
									"tests[\"Merchant Region echoed\"] = merchantName.region === environment.merchantRegion;",
									"tests[\"Merchant Country echoed\"] = merchantName.country === environment.merchantCountry;",
									"",
									"var originatorInst = originator.institution;",
									"tests[\"Originator institution present\"] = originatorInst !== null;",
									"tests[\"Originator institution ID echoed\"] = originatorInst.id === environment.originatorInstId;",
									"tests[\"Originator institution name echoed\"] = originatorInst.name === environment.originatorInstName;",
									"",
									"var client = jsonData.client;",
									"tests[\"Client institution present\"] = client !== null;",
									"tests[\"Client institution ID present\"] = client.id !== null;",
									"tests[\"Client institution name present\"] = client.name !== null;",
									"",
									"var settlementEntity = jsonData.settlementEntity;",
									"tests[\"Settlement Entity institution present\"] = settlementEntity !== null;",
									"tests[\"Settlement Entity institution ID present\"] = settlementEntity.id !== null;",
									"tests[\"Settlement Entity institution name present\"] = settlementEntity.name !== null;",
									"",
									"var receiver = jsonData.receiver;",
									"tests[\"Receiver institution present\"] = receiver !== null;",
									"tests[\"Receiver institution ID present\"] = receiver.id !== null;",
									"tests[\"Receiver institution name present\"] = receiver.name !== null;",
									"",
									"var thirdPartyIndentifiers = jsonData.thirdPartyIndentifiers;",
									"tests[\"Third Party Indentifiers present\"] = thirdPartyIndentifiers !== null;",
									"",
									"postman.setEnvironmentVariable(\"requestAmount\", jsonData.minAmount.amount);",
									"",
									"postman.setNextRequest(\"2_PurchaseRequest\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"function _p8(s) {",
									"        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
									"        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
									"    }",
									"",
									"function uuid() {",
									"    ",
									"    return _p8() + _p8(true) + _p8(true) + _p8();",
									"}",
									"",
									"var dateTime = new Date().toISOString();",
									"postman.setEnvironmentVariable(\"reqDateTime\", dateTime);",
									"",
									"postman.setEnvironmentVariable(\"requestId\",uuid());",
									"postman.setEnvironmentVariable(\"originatorTranRef\",_p8());",
									"postman.setEnvironmentVariable(\"clientTranRef\",_p8());",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/meterLookups/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"meter\": {\n    \t\"meterId\": \"{{meterId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "2_PurchaseRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var meter = jsonData.meter",
									"tests[\"Meter present\"] = meter !== null;",
									"",
									"tests[\"Customer present\"] = jsonData.customer !== null;",
									"tests[\"Utility present\"] = jsonData.utility !== null;",
									"tests[\"Tokens present\"] = jsonData.tokens !== null;",
									"",
									"tests[\"Correct id returned\"] = jsonData.id === environment.requestId;",
									"tests[\"Correct time returned\"] = jsonData.time === environment.reqDateTime;",
									"",
									"var originator = jsonData.originator;",
									"tests[\"Originator present\"] = originator !== null;",
									"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
									"tests[\"Originator Institution present\"] = originator.institution !== null;",
									"tests[\"Originator terminal echoed\"] = originator.terminalId === environment.terminalId;",
									"",
									"var merchant = originator.merchant;",
									"tests[\"Merchant ID echoed\"] = merchant.merchantId === environment.merchantId;",
									"tests[\"Merchant type echoed\"] = merchant.merchantType === environment.merchantType;",
									"tests[\"Merchant name present\"] = merchant.merchantName !== null;",
									"",
									"var merchantName = merchant.merchantName;",
									"tests[\"Merchant Name echoed\"] = merchantName.name === environment.merchantName;",
									"tests[\"Merchant City echoed\"] = merchantName.city === environment.merchantCity;",
									"tests[\"Merchant Region echoed\"] = merchantName.region === environment.merchantRegion;",
									"tests[\"Merchant Country echoed\"] = merchantName.country === environment.merchantCountry;",
									"",
									"var originatorInst = originator.institution;",
									"tests[\"Originator institution present\"] = originatorInst !== null;",
									"tests[\"Originator institution ID echoed\"] = originatorInst.id === environment.originatorInstId;",
									"tests[\"Originator institution name echoed\"] = originatorInst.name === environment.originatorInstName;",
									"",
									"var client = jsonData.client;",
									"tests[\"Client institution present\"] = client !== null;",
									"tests[\"Client institution ID present\"] = client.id !== null;",
									"tests[\"Client institution name present\"] = client.name !== null;",
									"",
									"var settlementEntity = jsonData.settlementEntity;",
									"tests[\"Settlement Entity institution present\"] = settlementEntity !== null;",
									"tests[\"Settlement Entity institution ID present\"] = settlementEntity.id !== null;",
									"tests[\"Settlement Entity institution name present\"] = settlementEntity.name !== null;",
									"",
									"var receiver = jsonData.receiver;",
									"tests[\"Receiver institution present\"] = receiver !== null;",
									"tests[\"Receiver institution ID present\"] = receiver.id !== null;",
									"tests[\"Receiver institution name present\"] = receiver.name !== null;",
									"",
									"var thirdPartyIndentifiers = jsonData.thirdPartyIndentifiers;",
									"tests[\"Third Party Indentifiers present\"] = thirdPartyIndentifiers !== null;",
									"",
									"postman.setEnvironmentVariable(\"thirdPartyId1\", jsonData.thirdPartyIdentifiers[0].institutionId);",
									"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", jsonData.thirdPartyIdentifiers[0].transactionIdentifier);",
									"",
									"postman.setEnvironmentVariable(\"thirdPartyId2\", jsonData.thirdPartyIdentifiers[1].institutionId);",
									"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", jsonData.thirdPartyIdentifiers[1].transactionIdentifier);",
									"",
									"postman.setNextRequest(\"3_ReversalAdvice\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"function _p8(s) {",
									"        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
									"        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
									"    }",
									"",
									"function uuid() {",
									"    ",
									"    return _p8() + _p8(true) + _p8(true) + _p8();",
									"}",
									"",
									"var dateTime = new Date().toISOString();",
									"postman.setEnvironmentVariable(\"reqDateTime\", dateTime);",
									"",
									"postman.setEnvironmentVariable(\"requestId\",uuid());",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/tokenPurchases/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"purchaseAmount\": {\n\t\t\"amount\": \"{{requestAmount}}\",\n\t\t\"currency\": \"{{currency}}\"\n\t},\n    \"meter\": {\n    \t\"meterId\": \"{{meterId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "3_ReversalAdvice",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 202\"] = responseCode.code === 202;"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"function _p8(s) {",
									"        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
									"        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
									"    }",
									"",
									"function uuid() {",
									"    ",
									"    return _p8() + _p8(true) + _p8(true) + _p8();",
									"}",
									"",
									"var dateTime = new Date().toISOString();",
									"postman.setEnvironmentVariable(\"adviceDateTime\", dateTime);",
									"",
									"postman.setEnvironmentVariable(\"reversalId\",uuid());",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/tokenPurchases/{{requestId}}/reversals/{{reversalId}}",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\" : \"{{reversalId}}\",\n  \"requestId\" : \"{{requestId}}\",\n  \"time\" : \"{{adviceDateTime}}\",\n  \"reversalReason\" : \"CANCELLED\",\n  \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Lookup-timeout-retry-confirm",
			"description": "",
			"item": [
				{
					"name": "1_MeterLookupRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var meter = jsonData.meter",
									"tests[\"Meter present\"] = meter !== null;",
									"",
									"tests[\"Correct id returned\"] = jsonData.id === environment.requestId;",
									"tests[\"Correct time returned\"] = jsonData.time === environment.reqDateTime;",
									"",
									"var originator = jsonData.originator;",
									"tests[\"Originator present\"] = originator !== null;",
									"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
									"tests[\"Originator Institution present\"] = originator.institution !== null;",
									"tests[\"Originator terminal echoed\"] = originator.terminalId === environment.terminalId;",
									"",
									"var merchant = originator.merchant;",
									"tests[\"Merchant ID echoed\"] = merchant.merchantId === environment.merchantId;",
									"tests[\"Merchant type echoed\"] = merchant.merchantType === environment.merchantType;",
									"tests[\"Merchant name present\"] = merchant.merchantName !== null;",
									"",
									"var merchantName = merchant.merchantName;",
									"tests[\"Merchant Name echoed\"] = merchantName.name === environment.merchantName;",
									"tests[\"Merchant City echoed\"] = merchantName.city === environment.merchantCity;",
									"tests[\"Merchant Region echoed\"] = merchantName.region === environment.merchantRegion;",
									"tests[\"Merchant Country echoed\"] = merchantName.country === environment.merchantCountry;",
									"",
									"var originatorInst = originator.institution;",
									"tests[\"Originator institution present\"] = originatorInst !== null;",
									"tests[\"Originator institution ID echoed\"] = originatorInst.id === environment.originatorInstId;",
									"tests[\"Originator institution name echoed\"] = originatorInst.name === environment.originatorInstName;",
									"",
									"var client = jsonData.client;",
									"tests[\"Client institution present\"] = client !== null;",
									"tests[\"Client institution ID present\"] = client.id !== null;",
									"tests[\"Client institution name present\"] = client.name !== null;",
									"",
									"var settlementEntity = jsonData.settlementEntity;",
									"tests[\"Settlement Entity institution present\"] = settlementEntity !== null;",
									"tests[\"Settlement Entity institution ID present\"] = settlementEntity.id !== null;",
									"tests[\"Settlement Entity institution name present\"] = settlementEntity.name !== null;",
									"",
									"var receiver = jsonData.receiver;",
									"tests[\"Receiver institution present\"] = receiver !== null;",
									"tests[\"Receiver institution ID present\"] = receiver.id !== null;",
									"tests[\"Receiver institution name present\"] = receiver.name !== null;",
									"",
									"var thirdPartyIndentifiers = jsonData.thirdPartyIndentifiers;",
									"tests[\"Third Party Indentifiers present\"] = thirdPartyIndentifiers !== null;",
									"",
									"postman.setEnvironmentVariable(\"requestAmount\", jsonData.minAmount.amount);",
									"",
									"postman.setNextRequest(\"2_PurchaseRequest\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"function _p8(s) {",
									"        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
									"        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
									"    }",
									"",
									"function uuid() {",
									"    ",
									"    return _p8() + _p8(true) + _p8(true) + _p8();",
									"}",
									"",
									"var dateTime = new Date().toISOString();",
									"postman.setEnvironmentVariable(\"reqDateTime\", dateTime);",
									"",
									"postman.setEnvironmentVariable(\"requestId\",uuid());",
									"postman.setEnvironmentVariable(\"originatorTranRef\",_p8());",
									"postman.setEnvironmentVariable(\"clientTranRef\",_p8());",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/meterLookups/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"meter\": {\n    \t\"meterId\": \"{{timeoutMeterId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "2_PurchaseRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 504\"] = responseCode.code === 504;",
									"",
									"postman.setNextRequest(\"3_RetryRequest\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"function _p8(s) {",
									"        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
									"        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
									"    }",
									"",
									"function uuid() {",
									"    ",
									"    return _p8() + _p8(true) + _p8(true) + _p8();",
									"}",
									"",
									"var dateTime = new Date().toISOString();",
									"postman.setEnvironmentVariable(\"reqDateTime\", dateTime);",
									"",
									"postman.setEnvironmentVariable(\"requestId\",uuid());",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/tokenPurchases/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"purchaseAmount\": {\n\t\t\"amount\": \"{{requestAmount}}\",\n\t\t\"currency\": \"{{currency}}\"\n\t},\n    \"meter\": {\n    \t\"meterId\": \"{{timeoutMeterId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "3_RetryRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var meter = jsonData.meter",
									"tests[\"Meter present\"] = meter !== null;",
									"",
									"tests[\"Customer present\"] = jsonData.customer !== null;",
									"tests[\"Utility present\"] = jsonData.utility !== null;",
									"tests[\"Tokens present\"] = jsonData.tokens !== null;",
									"",
									"tests[\"Correct id returned\"] = jsonData.id === environment.retryId;",
									"tests[\"Correct time returned\"] = jsonData.time === environment.reqDateTime;",
									"",
									"var originator = jsonData.originator;",
									"tests[\"Originator present\"] = originator !== null;",
									"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
									"tests[\"Originator Institution present\"] = originator.institution !== null;",
									"tests[\"Originator terminal echoed\"] = originator.terminalId === environment.terminalId;",
									"",
									"var merchant = originator.merchant;",
									"tests[\"Merchant ID echoed\"] = merchant.merchantId === environment.merchantId;",
									"tests[\"Merchant type echoed\"] = merchant.merchantType === environment.merchantType;",
									"tests[\"Merchant name present\"] = merchant.merchantName !== null;",
									"",
									"var merchantName = merchant.merchantName;",
									"tests[\"Merchant Name echoed\"] = merchantName.name === environment.merchantName;",
									"tests[\"Merchant City echoed\"] = merchantName.city === environment.merchantCity;",
									"tests[\"Merchant Region echoed\"] = merchantName.region === environment.merchantRegion;",
									"tests[\"Merchant Country echoed\"] = merchantName.country === environment.merchantCountry;",
									"",
									"var originatorInst = originator.institution;",
									"tests[\"Originator institution present\"] = originatorInst !== null;",
									"tests[\"Originator institution ID echoed\"] = originatorInst.id === environment.originatorInstId;",
									"tests[\"Originator institution name echoed\"] = originatorInst.name === environment.originatorInstName;",
									"",
									"var client = jsonData.client;",
									"tests[\"Client institution present\"] = client !== null;",
									"tests[\"Client institution ID present\"] = client.id !== null;",
									"tests[\"Client institution name present\"] = client.name !== null;",
									"",
									"var settlementEntity = jsonData.settlementEntity;",
									"tests[\"Settlement Entity institution present\"] = settlementEntity !== null;",
									"tests[\"Settlement Entity institution ID present\"] = settlementEntity.id !== null;",
									"tests[\"Settlement Entity institution name present\"] = settlementEntity.name !== null;",
									"",
									"var receiver = jsonData.receiver;",
									"tests[\"Receiver institution present\"] = receiver !== null;",
									"tests[\"Receiver institution ID present\"] = receiver.id !== null;",
									"tests[\"Receiver institution name present\"] = receiver.name !== null;",
									"",
									"var thirdPartyIndentifiers = jsonData.thirdPartyIndentifiers;",
									"tests[\"Third Party Indentifiers present\"] = thirdPartyIndentifiers !== null;",
									"",
									"postman.setEnvironmentVariable(\"thirdPartyId1\", jsonData.thirdPartyIdentifiers[0].institutionId);",
									"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", jsonData.thirdPartyIdentifiers[0].transactionIdentifier);",
									"",
									"postman.setEnvironmentVariable(\"thirdPartyId2\", jsonData.thirdPartyIdentifiers[1].institutionId);",
									"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", jsonData.thirdPartyIdentifiers[1].transactionIdentifier);",
									"",
									"postman.setNextRequest(\"4_ConfirmationAdvice\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"function _p8(s) {",
									"        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
									"        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
									"    }",
									"",
									"function uuid() {",
									"    ",
									"    return _p8() + _p8(true) + _p8(true) + _p8();",
									"}",
									"",
									"var dateTime = new Date().toISOString();",
									"postman.setEnvironmentVariable(\"retryDateTime\", dateTime);",
									"",
									"postman.setEnvironmentVariable(\"retryId\",uuid());",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/tokenPurchases/{{requestId}}/retry",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"purchaseAmount\": {\n      \"amount\": \"{{requestAmount}}\",\n      \"currency\": \"{{currency}}\"\n    },\n    \"meter\": {\n      \"meterId\": \"{{timeoutMeterId}}\"\n    },\n    \"client\": {\n      \"id\": \"{{clientId}}\",\n      \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{retryId}}\",\n    \"originator\": {\n      \"institution\": {\n        \"id\": \"{{originatorInstId}}\",\n        \"name\": \"{{originatorInstName}}\"\n      },\n      \"merchant\": {\n        \"merchantId\": \"{{merchantId}}\",\n        \"merchantName\": {\n          \"city\": \"{{merchantCity}}\",\n          \"country\": \"{{merchantCountry}}\",\n          \"name\": \"{{merchantName}}\",\n          \"region\": \"{{merchantRegion}}\"\n        },\n        \"merchantType\": \"{{merchantType}}\"\n      },\n      \"terminalId\": \"{{terminalId}}\"\n    },\n    \"receiver\": {\n      \"id\": \"{{receiverId}}\",\n      \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n      \"id\": \"{{settlementEntityId}}\",\n      \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n      {\n        \"institutionId\": \"{{originatorInstId}}\",\n        \"transactionIdentifier\": \"{{originatorTranRef}}\"\n      },\n      {\n        \"institutionId\": \"{{clientId}}\",\n        \"transactionIdentifier\": \"{{clientTranRef}}\"\n      }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "4_ConfirmationAdvice",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 202\"] = responseCode.code === 202;"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"function _p8(s) {",
									"        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
									"        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
									"    }",
									"",
									"function uuid() {",
									"    ",
									"    return _p8() + _p8(true) + _p8(true) + _p8();",
									"}",
									"",
									"var dateTime = new Date().toISOString();",
									"postman.setEnvironmentVariable(\"adviceDateTime\", dateTime);",
									"",
									"postman.setEnvironmentVariable(\"confirmationId\",uuid());",
									"postman.setEnvironmentVariable(\"tenderAmount\",environment.requestAmount);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/tokenPurchases/{{requestId}}/confirmations/{{confirmationId}}",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\" : \"{{confirmationId}}\",\n  \"requestId\" : \"{{requestId}}\",\n  \"time\" : \"{{adviceDateTime}}\",\n  \"tenders\" : [ {\n    \"accountType\" : \"{{tenderAccountType}}\",\n    \"amount\" : {\n      \"amount\" : {{tenderAmount}},\n      \"currency\" : \"{{currency}}\"\n    },\n    \"cardNumber\" : \"{{tenderCardNumber}}\",\n    \"tenderType\" : \"{{tenderTypeCard}}\"\n  } \n  ],\n  \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Meter lookups",
			"description": "",
			"item": [
				{
					"name": "Successful meter lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var meter = jsonData.meter",
									"tests[\"Meter present\"] = meter !== null;",
									"",
									"tests[\"Correct id returned\"] = jsonData.id === environment.requestId;",
									"tests[\"Correct time returned\"] = jsonData.time === environment.reqDateTime;",
									"",
									"var originator = jsonData.originator;",
									"tests[\"Originator present\"] = originator !== null;",
									"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
									"tests[\"Originator Institution present\"] = originator.institution !== null;",
									"tests[\"Originator terminal echoed\"] = originator.terminalId === environment.terminalId;",
									"",
									"var merchant = originator.merchant;",
									"tests[\"Merchant ID echoed\"] = merchant.merchantId === environment.merchantId;",
									"tests[\"Merchant type echoed\"] = merchant.merchantType === environment.merchantType;",
									"tests[\"Merchant name present\"] = merchant.merchantName !== null;",
									"",
									"var merchantName = merchant.merchantName;",
									"tests[\"Merchant Name echoed\"] = merchantName.name === environment.merchantName;",
									"tests[\"Merchant City echoed\"] = merchantName.city === environment.merchantCity;",
									"tests[\"Merchant Region echoed\"] = merchantName.region === environment.merchantRegion;",
									"tests[\"Merchant Country echoed\"] = merchantName.country === environment.merchantCountry;",
									"",
									"var originatorInst = originator.institution;",
									"tests[\"Originator institution present\"] = originatorInst !== null;",
									"tests[\"Originator institution ID echoed\"] = originatorInst.id === environment.originatorInstId;",
									"tests[\"Originator institution name echoed\"] = originatorInst.name === environment.originatorInstName;",
									"",
									"var client = jsonData.client;",
									"tests[\"Client institution present\"] = client !== null;",
									"tests[\"Client institution ID present\"] = client.id !== null;",
									"tests[\"Client institution name present\"] = client.name !== null;",
									"",
									"var settlementEntity = jsonData.settlementEntity;",
									"tests[\"Settlement Entity institution present\"] = settlementEntity !== null;",
									"tests[\"Settlement Entity institution ID present\"] = settlementEntity.id !== null;",
									"tests[\"Settlement Entity institution name present\"] = settlementEntity.name !== null;",
									"",
									"var receiver = jsonData.receiver;",
									"tests[\"Receiver institution present\"] = receiver !== null;",
									"tests[\"Receiver institution ID present\"] = receiver.id !== null;",
									"tests[\"Receiver institution name present\"] = receiver.name !== null;",
									"",
									"var thirdPartyIndentifiers = jsonData.thirdPartyIndentifiers;",
									"tests[\"Third Party Indentifiers present\"] = thirdPartyIndentifiers !== null;",
									"",
									"postman.setEnvironmentVariable(\"requestAmount\", jsonData.minAmount.amount);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"function _p8(s) {",
									"        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
									"        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
									"    }",
									"",
									"function uuid() {",
									"    ",
									"    return _p8() + _p8(true) + _p8(true) + _p8();",
									"}",
									"",
									"var dateTime = new Date().toISOString();",
									"postman.setEnvironmentVariable(\"reqDateTime\", dateTime);",
									"",
									"postman.setEnvironmentVariable(\"requestId\",uuid());",
									"postman.setEnvironmentVariable(\"originatorTranRef\",_p8());",
									"postman.setEnvironmentVariable(\"clientTranRef\",_p8());",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/meterLookups/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"meter\": {\n    \t\"meterId\": \"{{keychangeMeterId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Unuccessful meter lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Correct error type returned\"] = jsonData.errorType === \"UNKNOWN_METER_ID\";",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"function _p8(s) {",
									"        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
									"        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
									"    }",
									"",
									"function uuid() {",
									"    ",
									"    return _p8() + _p8(true) + _p8(true) + _p8();",
									"}",
									"",
									"var dateTime = new Date().toISOString();",
									"postman.setEnvironmentVariable(\"reqDateTime\", dateTime);",
									"",
									"postman.setEnvironmentVariable(\"requestId\",uuid());",
									"postman.setEnvironmentVariable(\"originatorTranRef\",_p8());",
									"postman.setEnvironmentVariable(\"clientTranRef\",_p8());",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/meterLookups/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"meter\": {\n    \t\"meterId\": \"9999\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Unmatched advices",
			"description": "",
			"item": [
				{
					"name": "ConfirmationAdvice",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"function _p8(s) {",
									"        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
									"        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
									"    }",
									"",
									"function uuid() {",
									"    ",
									"    return _p8() + _p8(true) + _p8(true) + _p8();",
									"}",
									"",
									"var dateTime = new Date().toISOString();",
									"postman.setEnvironmentVariable(\"adviceDateTime\", dateTime);",
									"",
									"postman.setEnvironmentVariable(\"confirmationId\",uuid());",
									"postman.setEnvironmentVariable(\"tenderAmount\",environment.requestAmount);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/tokenPurchases/{{requestId}}/confirmations/{{confirmationId}}",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\" : \"{{confirmationId}}\",\n  \"requestId\" : \"{{requestId}}\",\n  \"time\" : \"{{adviceDateTime}}\",\n  \"tenders\" : [ {\n    \"accountType\" : \"{{tenderAccountType}}\",\n    \"amount\" : {\n      \"amount\" : {{tenderAmount}},\n      \"currency\" : \"{{currency}}\"\n    },\n    \"cardNumber\" : \"{{tenderCardNumber}}\",\n    \"tenderType\" : \"{{tenderTypeCard}}\"\n  } \n  ],\n  \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "ReversalAdvice",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"function _p8(s) {",
									"        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
									"        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
									"    }",
									"",
									"function uuid() {",
									"    ",
									"    return _p8() + _p8(true) + _p8(true) + _p8();",
									"}",
									"",
									"var dateTime = new Date().toISOString();",
									"postman.setEnvironmentVariable(\"adviceDateTime\", dateTime);",
									"",
									"postman.setEnvironmentVariable(\"reversalId\",uuid());",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/tokenPurchases/{{requestId}}/reversals/{{reversalId}}",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\" : \"{{reversalId}}\",\n  \"requestId\" : \"{{requestId}}\",\n  \"time\" : \"{{adviceDateTime}}\",\n  \"reversalReason\" : \"CANCELLED\",\n  \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}
